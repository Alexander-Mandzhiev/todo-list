generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique @default(cuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  email     String    @unique
  password  String
  username  String?
  projects  Project[]
  Statuses  Status[]
  Tasks     Task[]

  @@map("user")
}

model Project {
  id          String   @id @unique @default(cuid())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  name        String
  description String
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  statuses    Status[]

  @@map("project")
}

model Status {
  id        String  @id @unique @default(cuid())
  name      String
  order     Int     @default(1)
  userId    String  @map("user_id")
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId String  @map("project_id")
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  tasks     Task[]

  @@map("status")
}

model Task {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  name        String
  description String
  order       Int      @default(1)
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  statusId    String   @map("status_id")
  status      Status   @relation(fields: [statusId], references: [id], onDelete: Cascade)

  @@map("task")
}
